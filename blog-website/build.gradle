plugins {
	id 'org.springframework.boot' version '2.4.0'
	id 'groovy'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'groovy'

group = 'com.erw'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

ext {
	set('springCloudVersion', "2020.0.2")
	set('swaggerVersion', "2.9.2")
	set('lombokVersion', "1.18.16")
}

repositories {
	mavenCentral()
	jcenter()
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url 'https://repo.spring.io/milestone' }
}

def Properties localBootRunProperties() {
	Properties p = new Properties();
	p.load(new FileInputStream(
			file(project.projectDir).absolutePath + "/src/main/resources/application-dev.properties"))
	return p;
}

bootRun {
	doFirst {
		bootRun.systemProperties = localBootRunProperties()
	}
}

dependencies {
	runtimeOnly 'org.springframework.boot:spring-boot-devtools'

	//Base
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.codehaus.groovy:groovy'

	//database
	implementation 'com.h2database:h2'
	implementation 'org.postgresql:postgresql'
	implementation "org.liquibase:liquibase-core"
	implementation 'javax.inject:javax.inject:1'

	//Discovery Service
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	//Swagger
	implementation "io.springfox:springfox-swagger2:${swaggerVersion}"
	implementation "io.springfox:springfox-swagger-ui:${swaggerVersion}"
	implementation "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"


	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation("org.junit.jupiter:junit-jupiter-api:5.0.0")
	testImplementation("org.junit.jupiter:junit-jupiter-engine:5.0.0")
	testImplementation 'org.mockito:mockito-core:2.7.22'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}


{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "ERW Website",

  "Mappings": {
    "Static": {
      "UserData": {
        "Value": "IyEvYmluL2Jhc2gKc3VkbyB5dW0gdXBkYXRlIC15CgojQWRkIERvY2tlcgpzdWRvIGFtYXpvbi1saW51eC1leHRyYXMgaW5zdGFsbCBkb2NrZXIKc3VkbyBzZXJ2aWNlIGRvY2tlciBzdGFydApzdWRvIGRvY2tlciBpbmZvCgpzdWRvIGN1cmwgLUwgaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci9jb21wb3NlL3JlbGVhc2VzL2xhdGVzdC9kb3dubG9hZC9kb2NrZXItY29tcG9zZS0kKHVuYW1lIC1zKS0kKHVuYW1lIC1tKSAtbyAvdXNyL2xvY2FsL2Jpbi9kb2NrZXItY29tcG9zZQpzdWRvIGNobW9kICt4IC91c3IvbG9jYWwvYmluL2RvY2tlci1jb21wb3NlCmRvY2tlci1jb21wb3NlIHZlcnNpb24Kc3VkbyBsbiAtcyAvdXNyL2xvY2FsL2Jpbi9kb2NrZXItY29tcG9zZSAvdXNyL2Jpbi9kb2NrZXItY29tcG9zZQoKI0luc3RhbGwgR3JhZGxlCiNzdWRvIHl1bSBpbnN0YWxsIC15IGphdmEtMS44LjAtb3BlbmpkawpzdWRvIGFtYXpvbi1saW51eC1leHRyYXMgaW5zdGFsbCBqYXZhLW9wZW5qZGsxMQpzdWRvIHl1bSBpbnN0YWxsIC15IHdnZXQgdW56aXAKY2QgL3RtcApzdWRvIHdnZXQgaHR0cHM6Ly9zZXJ2aWNlcy5ncmFkbGUub3JnL2Rpc3RyaWJ1dGlvbnMvZ3JhZGxlLTYuMy1iaW4uemlwCnVuemlwIGdyYWRsZS0qLnppcApzdWRvIG1rZGlyIC9vcHQvZ3JhZGxlCnN1ZG8gY3AgLXByIGdyYWRsZS0qLyogL29wdC9ncmFkbGUKc3VkbyBlY2hvICJleHBvcnQgUEFUSD0vb3B0L2dyYWRsZS9iaW46JHtQQVRIfSIgfCBzdWRvIHRlZSAvZXRjL3Byb2ZpbGUuZC9ncmFkbGUuc2gKc3VkbyBjaG1vZCAreCAvZXRjL3Byb2ZpbGUuZC9ncmFkbGUuc2gKc291cmNlIC9ldGMvcHJvZmlsZS5kL2dyYWRsZS5zaAoKI0luc3RhbGwgbm9kZQpjdXJsIC0tc2lsZW50IC0tbG9jYXRpb24gaHR0cHM6Ly9ycG0ubm9kZXNvdXJjZS5jb20vc2V0dXBfMTIueCB8IHN1ZG8gYmFzaCAtCnN1ZG8geXVtIGluc3RhbGwgLXkgbm9kZWpzCnN1ZG8geXVtIGluc3RhbGwgLXkgZ2l0CgojRGVwbG95IHdlYnNpdGUKY2QgL2hvbWUvZWMyLXVzZXIKZ2l0IGNsb25lIGh0dHBzOi8vZ2l0aHViLmNvbS9lcnc0NDQvV2Vic2l0ZS5naXQKCiNCdWlsZCBkaXNjb3Zlcnkgc2VydmljZQpjZCAvaG9tZS9lYzItdXNlci9XZWJzaXRlL2Rpc2NvdmVyeQpncmFkbGUgYnVpbGQKc3VkbyBkb2NrZXIgYnVpbGQgLS1idWlsZC1hcmcgSkFSX0ZJTEU9YnVpbGQvbGlicy8qLmphciAtdCBlcnc0NDQvZGlzY292ZXJ5IC4KCiNCdWlsZCBmcm9udGVuZCBzZXJ2aWNlCmNkIC9ob21lL2VjMi11c2VyL1dlYnNpdGUvd2Vic2l0ZS1mcm9udGVuZC9zcmMvbWFpbi9yZXNvdXJjZXMvc3RhdGljCm5wbSBpbnN0YWxsCmNkIC9ob21lL2VjMi11c2VyL1dlYnNpdGUvd2Vic2l0ZS1mcm9udGVuZApncmFkbGUgYnVpbGQKc3VkbyBkb2NrZXIgYnVpbGQgLS1idWlsZC1hcmcgSkFSX0ZJTEU9YnVpbGQvbGlicy8qLmphciAtdCBlcnc0NDQvd2Vic2l0ZS1mcm9udGVuZCAuCgojQnVpbGQgYmFja2VuZCBzZXJ2aWNlCmNkIC9ob21lL2VjMi11c2VyL1dlYnNpdGUvYmxvZy13ZWJzaXRlCmdyYWRsZSBidWlsZApzdWRvIGRvY2tlciBidWlsZCAtLWJ1aWxkLWFyZyBKQVJfRklMRT1idWlsZC9saWJzLyouamFyIC10IGVydzQ0NC9ibG9nLXdlYnNpdGUgLgoKY2QgL2hvbWUvZWMyLXVzZXIvV2Vic2l0ZQpzdWRvIGRvY2tlci1jb21wb3NlIHVw"
      }
    }
  },

  "Parameters": {
    "InstanceTypeParameter": {
      "Description": "EC2 instance type",
      "Type": "String",
      "Default": "t2.small",
      "AllowedValues": [ "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },

    "ImageIdParameter": {
      "Description": "AMI id for the EC2 instance",
      "Type": "AWS::EC2::Image::Id",
      "Default": "ami-0742b4e673072066f"
    },

    "KeyNameParameter": {
      "Description": "Key pair name for the EC2 instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Default": "cf"
    },

    "VPCIdParameter": {
      "Description": "VPC id for the Target Group",
      "Type": "AWS::EC2::VPC::Id",
      "Default": "vpc-6ae46a13"
    },

    "SubnetListParameter": {
      "Description": "List of Subnets for the Load Balancer. These should be for the a and b availability zones",
      "Type": "List<AWS::EC2::Subnet::Id>",
      "Default": "subnet-121fa448,subnet-889ca5b4"
    }
  },

  "Resources": {
    "WebsiteEC2Instance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": { "Ref": "InstanceTypeParameter" },
        "SecurityGroupIds": [ { "Ref": "WebsiteSecurityGroup" } ],
        "KeyName": { "Ref": "KeyNameParameter" },
        "ImageId": { "Ref": "ImageIdParameter"},
        "UserData": { "Fn::FindInMap": ["Static", "UserData", "Value"] }
      }
    },

    "WebsiteSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable SSH access via port 22",
        "SecurityGroupIngress": [ {
          "IpProtocol": "tcp",
          "FromPort": "22",
          "ToPort": "22",
          "CidrIp": "0.0.0.0/0"
        }, {
          "IpProtocol": "tcp",
          "FromPort": "8080",
          "ToPort": "8080",
          "CidrIp": "0.0.0.0/0"
        }, {
          "IpProtocol": "tcp",
          "FromPort": "8761",
          "ToPort": "8761",
          "CidrIp": "0.0.0.0/0"
        } ],
        "VpcId": { "Ref": "VPCIdParameter" }
      }
    },

    "WebsiteAutoScalingGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones": [
          { "Fn::Select": [ "0", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
          { "Fn::Select": [ "1", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] }
        ],
        "LaunchConfigurationName": { "Ref": "WebsiteLaunchConfiguration" },
        "MaxSize": "2",
        "MinSize": "1",
        "TargetGroupARNs": [ { "Ref": "WebsiteTargetGroup" } ]
      }
    },

    "WebsiteAutoScalingGroupPolicy": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AdjustmentType": "ChangeInCapacity",
        "AutoScalingGroupName": { "Ref": "WebsiteAutoScalingGroup"},
        "PolicyType": "TargetTrackingScaling",
        "TargetTrackingConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "ASGAverageCPUUtilization"
          },
          "TargetValue": 5
        }
      }
    },

    "WebsiteLaunchConfiguration": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "IamInstanceProfile": { "Ref": "WebsiteIAMInstanceProfile"},
        "ImageId": { "Ref": "ImageIdParameter"},
        "InstanceType": { "Ref": "InstanceTypeParameter"},
        "KeyName": { "Ref": "KeyNameParameter" },
        "SecurityGroups": [ { "Ref": "WebsiteSecurityGroup" } ],
        "UserData": { "Fn::FindInMap": ["Static", "UserData", "Value"] }
      }
    },

    "WebsiteTargetGroup": {
      "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties" : {
        "Port" : 8080,
        "Protocol" : "HTTP",
        "Targets": [{ "Id": { "Ref": "WebsiteEC2Instance" } }],
        "VpcId" : { "Ref": "VPCIdParameter" }
      }
    },

    "WebsiteEC2InstanceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "ManagedPolicyArns": [ "arn:aws:iam::aws:policy/AdministratorAccess" ]
      }
    },

    "WebsiteIAMInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [ { "Ref": "WebsiteEC2InstanceRole" } ]
      }
    },

    "WebsiteLoadBalancerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable Load Balancer connections on port 80",
        "SecurityGroupIngress": [ {
          "IpProtocol": "tcp",
          "FromPort": "80",
          "ToPort": "80",
          "CidrIp": "0.0.0.0/0"
        } ]
      }
    },

    "WebsiteLoadBalancer": {
      "Type" : "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties" : {
        "SecurityGroups" : [{ "Fn::GetAtt": ["WebsiteLoadBalancerSecurityGroup", "GroupId"] }],
        "Subnets" : { "Ref": "SubnetListParameter" }
      }
    },

    "WebsiteListener": {
      "Type" : "AWS::ElasticLoadBalancingV2::Listener",
      "Properties" : {
        "DefaultActions" : [
          {
            "TargetGroupArn": { "Ref": "WebsiteTargetGroup" },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn" : { "Ref": "WebsiteLoadBalancer" },
        "Port" : 80,
        "Protocol" : "HTTP"
      }
    }
  },

  "Outputs": {
    "LoadBalancerUrl": {
      "Description": "InstanceId of the newly created EC2 instance",
      "Value": { "Fn::Sub": ["http://${url}", { "url": { "Fn::GetAtt": [ "WebsiteLoadBalancer", "DNSName" ] } }] }
    }
  }
}
